version: "3"

services:
    proxy:
        image: traefik   # the official Traefik docker image
        container_name: psp_traefik
        restart: on-failure
        command: --api --docker # enables the web UI and tells Traefik to listen to docker
        ports:
            - 80:80     # the HTTP port
            - 443:443   # https Port
            - 8081:8081 # the Web UI (enabled by --api)
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./proxy/traefik.toml:/etc/traefik/traefik.toml
            - ./proxy/acme.json:/acme.json

    elasticsearch:
        tty: true
        image: docker.elastic.co/elasticsearch/elasticsearch:7.3.0
        container_name: psp_elasticsearch
        environment:
            - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
            - ELASTICSEARCH_USERNAME=elastic
            - ELASTICSEARCH_PASSWORD=prosper-inv
        volumes:
            - ./elasticsearch/data:/usr/share/elasticsearch/data
            - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
            - ./elasticsearch-setup.sh:/usr/share/elasticsearch/elasticsearch-setup.sh
        ports:
            - 9200:9200
            - 9300:9300
        ulimits:
            memlock:
                soft: -1
                hard: -1
            nofile:
                soft: 65536
                hard: 65536
        labels:
            - traefik.enable=true
            - traefik.backend=elasticsearch
            - traefik.port=9200
            - traefik.frontend.passHostHeader=true
            - traefik.frontend.rule=Host:local.prosperinv.com;PathPrefixStrip:/elasticsearch

    kibana:
        tty: true
        image: docker.elastic.co/kibana/kibana:7.3.0
        container_name: psp_kibana
        restart: always
        links:
            - elasticsearch
        ports:
            - 5601:5601
        depends_on:
          - elasticsearch
        environment:
            - ELASTICSEARCH_USERNAME=elastic
            - ELASTICSEARCH_PASSWORD=prosper-inv
        volumes:
            - ./kibana.yml:/usr/share/kibana/config/kibana.yml
        labels:
            - traefik.enable=true
            - traefik.backend=kibana
            - traefik.port=5601
            - traefik.frontend.passHostHeader=true
            - traefik.frontend.rule=Host:local.prosperinv.com;PathPrefixStrip:/kibana

    rest-api:
        build: ./
        image: prosper-rest-api
        container_name: psp_rest-api
        volumes:
            - ./:/usr/src/app/
        environment:
            - DJANGO_SETTINGS_MODULE=prosper_investments.settings.docker
            - ENV=local
            - ELASTICSEARCH_URL=http://local.prosperinv.com/elasticsearch
            - DB_HOST=db
            - DB_NAME=prosper_investments
            - DB_USERNAME=prosper_investments
            - DB_PASSWORD=prosper_investments
            - DB_PORT=3306
            - EMAIL_HOST_PASSWORD=********
            - BASE_URL=http://local.prosperinv.com/api
        links:
            - proxy:local.prosperinv.com
            - db
            - elasticsearch
        labels:
            - traefik.enable=true
            - traefik.port=8000
            - traefik.api.backend=rest-api
            - traefik.api.frontend.passHostHeader=true
            - traefik.api.frontend.rule=Host:local.prosperinv.com;PathPrefixStrip:/api
            - traefik.static.backend=rest-api-static
            - traefik.static.frontend.rule=Host:local.prosperinv.com;PathPrefix:/admin,/media,/static
        depends_on:
            - db
        command: bash -c "pip install -r requirements.txt && bash ./docker/run.sh"

    db:
        image: mysql:5.7
        container_name: psp_db
        command: ["--general_log=1", "--log_output=TABLE", "--explicit_defaults_for_timestamp=1"]
        environment:
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_PASSWORD=prosper_investments
            - MYSQL_DATABASE=prosper_investments
            - MYSQL_USER=prosper_investments
        ports:
            - 3307:3306
        restart: always
        volumes:
            - ./tmp-docker-vol/mysql:/var/lib/mysql
        healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-proot"]
            interval: 30s
            timeout: 30s
            retries: 10
